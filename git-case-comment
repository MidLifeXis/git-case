#!/bin/bash
#
# Assumptions:
#  - in a git repository
#  - we can access git-case-common
#  - the branch defined by GIT_CASE_HEAD exists (see git-case-common)

source git-case-common

COMMENT="$@"
test -z "$COMMENT" && die "$0 [--stdin | - | <text>]"

ID=$(cat "$GIT_CASE_ACTIVE" 2>/dev/null || true)
test -z "$ID" && die "no active case set"

COMMENT_NAME=$(date +%Y%m%d-%H%M%S.%N)

# we work in the working dir
go_to_git_case_work_dir

COMMENT_FILE=
case "$COMMENT" in
    --stdin)
        COMMENT_FILTER=cat
        COMMENT_FILE=/dev/stdin
        ;;
    -)
        COMMENT_FILE=$(mktemp -p "$GIT_CASE_WORK_DIR")
        cat <<END > "$COMMENT_FILE"

# Type in a comment for case $(gen_short_case_id $ID) above.
# Lines starting with '#' character are ignored.
END
        COMMENT_FILTER='grep -v ^#'
        vim $COMMENT_FILE
        ;;
esac

git read-tree -i --reset "$GIT_CASE_HEAD"

if test -f "$COMMENT_FILE" ; then
        $COMMENT_FILTER "$COMMENT_FILE" | add_file_to_index "$ID/comments/$COMMENT_NAME"
else
        add_file_to_index "$ID/comments/$COMMENT_NAME" "$COMMENT"
fi

commit_index_and_update_branch "comment on $ID" "-p $GIT_CASE_HEAD"
