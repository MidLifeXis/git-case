# About

Please note that this file uses Markdown notation.
 * [markdown syntax for vim](http://www.vim.org/scripts/script.php?script_id=1242)
 * [markdown basics](http://daringfireball.net/projects/markdown/basics)

# Implementation

## General

Few points about implementation...

 * code uses .git/case/tmp-$$/index for temporary index
 * code uses .git/case/active for current case
 * code uses 'cases' branch to create history for cases
 * there are no other temporary files created (anymore)

## Datastore

In the 'cases' branch, git-case stores each case in it's own directory.
The directory contains all information about the case.  Each change to
the case creates a new commit on the 'cases' branch.

    <id>/                   # directory per case
    |-- description         # 1st line title, then free form description
    |-- type                # bug/feature/question/...
    |-- found               # git commit worktree was in when case created RO
    |-- state               # new/open/invalid/etc
    |-- assigned            # name <email>
    |-- marks/              # list of marks - tags in most tracker talk
    |   `-- <name>          # empty file
    |-- comments/           # comments, one per file
    |   |-- <sha1>          # contains arbitrary text
    |   |-- by-message-id   # comments indexed by message-id
    |   |   `-- <mid>       # message id from email
    |   |       `-- <sha1>  # hash of the comment, empty file
    |   |-- by-timestamp    # comments indexed by timestamp
    |       `-- <timestamp> # timestamp from email
    |           `-- <sha1>  # hash of the comment, empty file
    |-- files/              # attachements to the case/comment
    |   `-- <filename>/     # the name of the dir is actually the name of the file
    |       `-- <sha1>      # hash of the file, contais the file
    |-- ids/                # commits for which the state of thsi bug is known
    |   `-- <sha1>          # file contains either 'good' or 'bad'
    `-- fields/             # additional fields
        `-- <name>          # contains one line of text

There is a bit more information on the wiki page, see below.

# getting started

You need to setup your repository to be able to push and pull cases.

Here is what your .git/config should look like:

    [remote "origin"]
            url = tachyon.jukie.net:/home/git/git-case.git
            fetch = +refs/heads/*:refs/remotes/origin/*
            push = master:refs/heads/master
            push = cases:refs/heads/cases

There is no automation right now.  Each time you fetch/pull from the
repo you will have to merge your cases in manually.

    # ./git-case-merge

That includes the first time when you don't yet have a cases branch.
Let me know what happens if you already had a cases branch :)

## handy aliases

I checked out git-case to `$GIT_CASE_DIR` and have this alias in my
`$HOME/.gitconfig`:

    case = !sh -c 'exec $GIT_CASE_DIR/git-case/git-case.git/git-case-$0 ${0+"$@"}'

Which allows me to run commands more naturally:

    git case <cmd> <options>

# Completed commands

## creating new cases

    # ./git-case-new this is the first bug
    # ./git-case-new this is the second bug
    # ./git-case-new this is the third bug

    # git log --pretty=oneline --abbrev-commit cases
    5d67789... this is the third bug
    2785704... this is the second bug
    3e75d93... this is the first bug

## listing cases

    # ./git-case-list
    c11bce     [new]  this is the third bug
    cb2193     [new]  this is the first bug
    d5f5e8     [new]  this is the second bug

## activating a case

    # ./git-case-active c11bce
    # ./git-case-active
    c11bcecc97b0cd1a7e5bc420890b6b20c7fe2132

## commenting

    # echo some text goes here | ./git-case-comment --stdin

If text is not provided, an vim will be invoked

    # ./git-case-comment

You can also add attachments

    # ./git-case-comment --attach file.foo

## displaying a case

    # ./git-case-show
    Case ID:     77d673 (77d673c60bd046f63fe8eeabbbb0ad228341fcb2)
    Description: improve comment storage
    Created on:  Wed Apr 16 11:49:04 EDT 2008
    Type:        feature
    State:       closed
    Assigned to: (nobody)
    Found in:    3d7686c... agruments for git-case-new

    Comments...
      1946751edcfdbb2013d8438da6ae4542325c5c94
          Date: Thu, 17 Apr 2008 09:51:56 -0400
          From: Bart Trojanowski <bart@jukie.net>
          
          adding timestamp and message-id indexes, and storing comments by their hashes

      6ff6cc6ea822b06e7295c44eb03ffafdbc95aa9d
          Date: Thu, 17 Apr 2008 10:27:21 -0400
          From: Bart Trojanowski <bart@jukie.net>
          Attachment: 73fca13fc8d143c4ef67d16a7be5a6c3d84c97bc attach
          
          test


## changing state

    # ./git-case-state
    new
    # ./git-case-state old
    # ./git-case-state
    old

## changing type

    # ./git-case-type
    bug
    # ./git-case-type feature
    # ./git-case-type
    feature

## assigning

    # ./git-case-assign dmo@dmo.ca
    # ./git-case-assign
    dmo@dmo.ca

## setting and clearing marks

    # ./git-case-mark fixme
    # ./git-case-mark -d fixme

## setting and clearing custom fields

    # ./git-case-field variable value
    # ./git-case-field variable
    value
    # ./git-case-field -d variable

## adding good/bad ids

    # ./git-case-ids -g HEAD
    # ./git-case-ids -b HEAD~1
    # ./git-case-ids -l
    good 12799ccbe7ce445b11b7bd4833bcc2c2ce1b48b7
    bad  67be85f1274474029aad8a75b823592324305aa4
    # ./git-case-ids -d HEAD
    # ./git-case-ids -l
    bad  67be85f1274474029aad8a75b823592324305aa4

# References:

  Wiki:        http://www.jukie.net/~bart/kwiki/index.cgi?GitBugTracker
  Git via ssh: tachyon.jukie.net:/home/git/git-case.git
  Public git:  git://tachyon.jukie.net/git-case.git


vim: set ts=8 et sw=8 tw=72 ft=mkd
